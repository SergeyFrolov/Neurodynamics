cmake_minimum_required(VERSION 3.2)
project(neurodynamics)

option(VERBOSE_OUTPUT "If turned off: only initial, final states and voltage of every 100th step would be printed." ON)
if(VERBOSE_OUTPUT)
    message("Will print initial, every 100th step(voltage) and final state of neurons.")
    add_definitions(-DVERBOSE_OUTPUT)
    add_definitions(-DOUTPUT_PROCESS_LEVEL=3)
    add_definitions(-DOUTPUT_PRINT_STEP=1)
else(VERBOSE_OUTPUT)
    message("Will print initial, middle(full), final state of neurons and topology.")
    add_definitions(-DOUTPUT_PROCESS_LEVEL=2)
    add_definitions(-DOUTPUT_PRINT_STEP=100)
endif(VERBOSE_OUTPUT)

if(CYGWIN)
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "/home/$ENV{USER}/CLionProjects/${PROJECT_NAME}/")
endif(CYGWIN)

if(CMAKE_BUILD_TYPE STREQUAL Release)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O3")
else(CMAKE_BUILD_TYPE STREQUAL Release)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g -Wall")
    add_definitions(-DNEURODYNAMICS_DEBUG)
endif(CMAKE_BUILD_TYPE STREQUAL Release)

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")

find_package(MPI)
if (MPI_FOUND)
    include_directories( ${MPI_C_INCLUDE_PATH} )
    include_directories( ${MPI_CXX_INCLUDE_PATH} )
    add_definitions(-DNEURODYNAMICS_WITH_MPI)
    message( "MPI package was found. Proceeding." )
    set(CMAKE_CXX_COMPILE_FLAGS ${CMAKE_CXX_COMPILE_FLAGS} ${MPI_COMPILE_FLAGS})
    set(CMAKE_CXX_LINK_FLAGS ${CMAKE_CXX_LINK_FLAGS} ${MPI_LINK_FLAGS})
    set(CMAKE_C_COMPILE_FLAGS ${CMAKE_C_COMPILE_FLAGS} ${MPI_C_COMPILE_FLAGS})
    set(CMAKE_C_LINK_FLAGS ${CMAKE_C_LINK_FLAGS} ${MPI_C_LINK_FLAGS})

    option(USE_COLLECTIVE "Use collective communication algorithm." ON)
    option(USE_P2P "Use point to point communication algorithm." ON)

    if((NOT USE_COLLECTIVE) AND (NOT USE_P2P))
        message(FATAL ERROR "No communication algorithms chosen.")
    endif((NOT USE_COLLECTIVE) AND (NOT USE_P2P))

    if((USE_COLLECTIVE) AND (NOT USE_P2P))
        message("Using collective communication algorithm.")
        add_definitions(-DMPI_COLLECTIVE_DENSITY_THRESHOLD=0.0)
        set(TARGET_NAME neurodynamics_coll)
    endif((USE_COLLECTIVE) AND (NOT USE_P2P))

    if((NOT USE_COLLECTIVE) AND (USE_P2P))
        message("Using point to point communication algorithm.")
        add_definitions(-DMPI_COLLECTIVE_DENSITY_THRESHOLD=1.0)
        set(TARGET_NAME neurodynamics_p2p)
    endif((NOT USE_COLLECTIVE) AND (USE_P2P))

    if((USE_COLLECTIVE) AND (USE_P2P))
        message("Using both communication algorithms.")
        set(TARGET_NAME neurodynamics)
    endif((USE_COLLECTIVE) AND (USE_P2P))
else(MPI_FOUND)
    message( WARNING "Could not find MPI package!" )
    message( WARNING "Building non-MPI version!" )
endif(MPI_FOUND)

include_directories(headers)
add_subdirectory(sources)
